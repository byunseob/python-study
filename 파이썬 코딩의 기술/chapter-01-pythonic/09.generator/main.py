# 리스트 컴프리헨션의 문제점은 입력 시퀀스에 있는 각 값별로 아이템을 하나씩 담은 새 리스트를 통째로 생성한다는 점이다.
# 입력이 클 시 메모리를 많이 소모 한다.

# 파이썬은 이 문제를 해결 하기 위해 제너레이터 표현식을 제공한다.
# 제너레이터 표현식은 실행될 때 출력 시퀀스를 모두 구체화 하지 않는다.(메모리 로딩)
# 표현식에서 한번에 한 아이템을 내주는 이터레이터 로 평가된다.

a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
squares = (x ** 2 for x in a if x % 2 == 0)
print(squares)
# <generator object <genexpr> at 0x1047b1840>

# 제너레이터 표현식은   제너레이터 표현식과 함께 하용할 수 있다.
result = ((x, x ** 0.5) for x in squares)
print(next(result))  # 이 이터레이터를 전진 시킬 때마다 루프의 도미노 효과로 내부 이터레이터도 전진 시키고 조건 표현식을 계산해서 입려과 출력을 처리한다.
print(next(result))

result = [x for x in squares]
print(result)

# 제너레이터 표현식은 이터레이터로 한번에 한 출력만 만드므로 메모리 문제를 피할 수 있다.
